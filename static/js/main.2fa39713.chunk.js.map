{"version":3,"sources":["LoginForm.jsx","Stream.jsx","Users.jsx","Message.jsx","Chatpage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LoginForm","props","updateInput","event","setState","target","name","value","clear","username","chatUrl","password","login","request","XMLHttpRequest","form","FormData","append","state","open","addEventListener","readyState","status","data","JSON","parse","responseText","handleLogin","alert","send","preventDefault","isVisible","bind","this","message_token","stream_token","className","id","class","for","type","onChange","autoFocus","onClick","Component","Stream","messageList","message","concat","map","Users","userList","findIndex","user","index","indexOf","newstate","slice","Message","entermessage","key","streamMessage","disable","disabled","onKeyPress","Chatpage","appendData","inputRef","React","createRef","streamRef","userRef","auth","setRequestHeader","getAllResponseHeaders","getResponseHeader","updateMessageToken","data1","current","msgToken","streamToken","server","EventSource","fulldate","Date","created","entry","toLocaleDateString","toLocaleTimeString","hour","minute","hour12","addUser","users","i","length","close","loginRedirect","removeUser","onopen","enableTextbox","onerror","disableTextbox","clearAllMessages","clearAllUsers","ref","App","chatRef","loginRef","clearChatpage","showLogin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fa39713.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatUrl:\"\",\n      //chatUrl: \"\",\n      username: \"\",\n      password: \"\",\n      isVisible: true\n    }\n    this.handleLogin = this.handleLogin.bind(this)\n    \n  }\n\n  updateInput = (event) => {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  clear = () => {\n    this.setState({username: \"\", chatUrl: \"\", password: \"\"})\n  }\n\n  handleLogin(data) {\n    this.setState({isVisible: false})\n    this.props.handleLogin(data.message_token, data.stream_token, this.state.chatUrl)\n\n  }\n\n  showLogin() {\n    this.setState({isVisible: true})\n    this.clear();\n  }\n\n\n  login = (event) => {\n\n    var request = new XMLHttpRequest();\n    var form = new FormData();\n    form.append(\"password\", this.state.password);\n    form.append(\"username\", this.state.username);\n\n    request.open(\"POST\", this.state.chatUrl + '/login');\n\n    request.addEventListener(\"readystatechange\", () => {\n      if (request.readyState !== 4) return;\n      if (request.status === 201) {\n          const data = JSON.parse(request.responseText);\n\n          this.handleLogin(data);\n      } else if (request.status === 403) {\n          alert(\"Invalid username or password\");\n      } else if (request.status === 409) {\n          alert(this.state.username+ \" is already logged in\");\n\n      } else {\n          alert(request.status + \" failure to /login\");\n      }\n\n    });\n    \n    request.send(form);\n    event.preventDefault();\n    \n  }\n\n\n  render() {\n    return (\n      <form className={this.state.isVisible ? \"login\" : \"hide\"} id=\"login\">\n        <div class=\"head\">\n          <h2>Login</h2>\n        </div><br/>\n        <div class=\"inputtext\">          \n          <label for=\"chatUrl\">Chat URL: </label><br/>\n          <input type=\"text\" class=\"text\" onChange={this.updateInput} value={this.state.chatUrl} name=\"chatUrl\" autoFocus/>  <br/>\n        </div><br/>\n\n        <div class=\"inputtext\">\n          <label for=\"username\">Username: </label><br/>\n          <input type=\"text\" class=\"text\" onChange={this.updateInput} value={this.state.username} name=\"username\"/> <br/>\n        </div><br/>\n\n        <div class=\"inputtext\">\n          <label for=\"password\">Password: </label><br/>\n          <input type=\"password\" class=\"text\" onChange={this.updateInput} value={this.state.password} name=\"password\"/> <br/>\n        </div><br/>\n\n        <div class=\"inputtext\">\n          <input type=\"submit\" class=\"button\" onClick={this.login} value=\"Login\"/>\n          <input type=\"submit\" class=\"button\" onClick={this.clear} value=\"Clear\"/> <br/>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n","import { Component } from \"react\";\nimport \"./chat.css\";\n\nclass Stream extends Component {\n\n  constructor(props) {\n    super(props); \n    this.state = {\n      messageList : []\n    }\n  }\n  \n  appendData(message) {\n    this.setState({\n      messageList: this.state.messageList.concat(message)\n    })\n  }\n\n  clearAllMessages() {\n    this.setState({\n      messageList: []\n    })\n  }\n  \n  render() {\n    return (\n      <div id=\"eventstream\">\n        {this.state.messageList.map(message => (\n          <div>{message}</div>\n        ))}  \n      </div>\n    );  \n  }\n}\n\nexport default Stream;","import { Component } from \"react\";\nimport \"./App.css\";\n\nclass Users extends Component {\n\n  constructor(props) {\n    super(props); \n    this.state = {\n      userList : []\n    }\n  }\n  \n  addUser(username) {\n    const index = this.state.userList.findIndex(user => user === username);\n    if(index === -1) {\n      this.setState({\n        userList: this.state.userList.concat(username)\n      })\n    }\n  }\n  \n  removeUser(username) {\n    var index = this.state.userList.indexOf(username);\n    if (index === -1) return;\n\n    var newstate = this.state.userList.slice(0, index).concat(this.state.userList.slice(index+1))\n\n    this.setState({\n      userList: newstate\n    })\n  }\n\n  clearAllUsers() {\n    this.setState({\n      userList: []\n    })\n  }\n\n  render() {\n    return (\n      <div>\n      \t<div class='onlineuser'>Online Users</div>\n        <div id='userlist'>\n        {this.state.userList.map(user => (\n          <div key={user}>{user}</div>\n        ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Users;","import { Component } from \"react\";\nimport \"./chat.css\";\n\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      disable: true\n    }\n    \n  }\n\n  updateInput = (event) => {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  entermessage = (event) => {\n    if (event.key === 'Enter') { \n      event.preventDefault();\n      this.props.streamMessage(this.state.message)\n      this.setState({message: \"\"})\n    }\n  }\n\n  enableTextbox() {\n    this.setState({message: \"\", disable: false})\n  }\n  \n  disableTextbox() {\n    this.setState({message: \"Reconnect to send messages...\", disable: true})\n  }\n\n  render() {\n    return (\n      <div>\n          <input type=\"text\" value={this.state.message} onChange={this.updateInput} disabled={this.state.disable} \n          onKeyPress={this.entermessage} class='msgtxt' name=\"message\" id=\"postmessage\" autoFocus/>\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import { Component } from \"react\";\nimport React from 'react';\nimport Stream from './Stream'\nimport Users from './Users'\nimport Message from './Message'\nimport \"./chat.css\";\n\nclass Chatpage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message_token: \"\",\n      stream_token: \"\",\n      chatUrl: \"\",\n      isVisible: false\n    }\n   \n    this.appendData = this.appendData.bind(this);\n    this.streamMessage = this.streamMessage.bind(this);\n    this.inputRef = React.createRef()\n    this.streamRef = React.createRef();\n    this.userRef = React.createRef();\n  }\n\n  streamMessage(data) {\n    var auth = \"Bearer \" + this.state.message_token;\n    var request = new XMLHttpRequest();\n    var form = new FormData();\n    form.append(\"message\", data);\n\n    request.open(\"POST\", this.state.chatUrl + '/message');\n    request.setRequestHeader('Authorization', auth);\n\n    request.addEventListener(\"readystatechange\", () => {\n      if (request.readyState !== 4 ) return;\n      if (request.status === 201) {\n        if (request.getAllResponseHeaders().indexOf(\"token\") >= 0) {\n          var data = request.getResponseHeader(\"token\");\n          this.updateMessageToken(data);\n        }\n      } else if (request.status === 403) {\n          alert(\"Invalid message token\");\n      } else if (request.status === 409) {\n        \n          var data1 = request.getResponseHeader(\"token\");\n          this.updateMessageToken(data1);\n          alert(\"User not logged in\");\n\n      } else {\n          alert(request.status + \" failure to /message\");\n      }\n      \n\n    });\n    \n    request.send(form);\n  }\n\n  appendData(data) {\n    this.streamRef.current.appendData(data);\n  }\n\n  updateMessageToken(data) {\n    this.setState({message_token: data});\n  }\n\n  handleLogin(msgToken, streamToken, chatUrl) {\n    \n    this.setState({message_token: msgToken, stream_token: streamToken, chatUrl: chatUrl, isVisible: true})\n\n    const server = new EventSource(this.state.chatUrl + \"/stream/\" + streamToken);\n    \n    server.addEventListener(\"Message\", (event) => {\n      var data = JSON.parse(event.data);\n      var fulldate = new Date(data.created * 1000);\n      var timestamp = fulldate.toLocaleDateString('en-US') + \" \" +fulldate.toLocaleTimeString('en-US', {hour:'2-digit',minute:'2-digit', hour12: true })\n\n      var entry = timestamp + \" (\" + data.user + \") \" + data.message;\n      this.appendData(entry);\n\n    });\n\n    server.addEventListener(\"Join\", (event) => {\n\n      var data = JSON.parse(event.data);\n      var fulldate = new Date(data.created * 1000);\n      var timestamp = fulldate.toLocaleDateString('en-US') + \" \" +fulldate.toLocaleTimeString('en-US', {hour:'2-digit',minute:'2-digit', hour12: true })\n\n      var entry = timestamp + \" JOIN: \" + data.user;\n      this.addUser(data.user);\n      this.appendData(entry);\n    });\n\n    server.addEventListener(\"Users\", (event) => {\n      \n      var data = JSON.parse(event.data);\n      var users = data.users;\n      for(var i = 0; i < users.length; i++) {\n        this.addUser(users[i]);\n      }\n    });\n\n    server.addEventListener(\"Disconnect\", (event) => {\n      this.setState({isVisible: false});\n      server.close();\n      this.props.loginRedirect();\n    });\n    \n    server.addEventListener(\"Part\", (event) => {\n      var data = JSON.parse(event.data);\n      var fulldate = new Date(data.created * 1000);\n      var timestamp = fulldate.toLocaleDateString('en-US') + \" \" +fulldate.toLocaleTimeString('en-US', {hour:'2-digit',minute:'2-digit', hour12: true })\n\n      var entry = timestamp + \" PART: \" + data.user;\n      this.removeUser(data.user);\n      this.appendData(entry);\n    });\n\n    server.addEventListener(\"ServerStatus\", (event) => {\n      \n      var data = JSON.parse(event.data);\n      var fulldate = new Date(data.created * 1000);\n      var timestamp = fulldate.toLocaleDateString('en-US') + \" \" +fulldate.toLocaleTimeString('en-US', {hour:'2-digit',minute:'2-digit', hour12: true })\n      var status = timestamp + \" STATUS: \" + data.status;\n      \n      this.appendData(status);\n    });\n\n    server.onopen = (event) => {\n      this.inputRef.current.enableTextbox();\n    };\n\n    server.onerror = (event) => {\n      this.inputRef.current.disableTextbox();\n    };\n  }\n\n  removeUser(username) {\n    this.userRef.current.removeUser(username);\n  }\n\n  addUser(username) {\n    this.userRef.current.addUser(username);\n  }\n\n  clearChatpage() {\n    this.streamRef.current.clearAllMessages();\n    this.userRef.current.clearAllUsers();\n  }\n\n  render() {\n    return (\n      <div class={this.state.isVisible ? \"\" : \"hide\"} >\n        <div>\n          <h1>Chat Stream</h1>\n        </div>\n        <div>\n          <div class='stream'><Stream ref={this.streamRef}/></div>\n          <div class='users'><Users ref={this.userRef}/></div>\n        </div>\n        <div>\n          <div class='message'><Message streamMessage={this.streamMessage} ref={this.inputRef}/></div>\n          <div class='placeholder'></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chatpage;\n","import { Component } from \"react\";\nimport React from 'react';\nimport LoginForm from './LoginForm'\nimport Chatpage from './Chatpage'\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); \n    this.chatRef = React.createRef();\n    this.loginRef = React.createRef();\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.loginRedirect = this.loginRedirect.bind(this)\n  }\n\n  handleLogin(msgToken, streamToken, chatUrl) {\n    this.chatRef.current.handleLogin(msgToken, streamToken, chatUrl);\n  }\n  \n  loginRedirect() {\n    this.chatRef.current.clearChatpage();\n    this.loginRef.current.showLogin();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <LoginForm ref={this.loginRef} handleLogin={this.handleLogin}/>\n        <Chatpage ref={this.chatRef} loginRedirect = {this.loginRedirect}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}